from tweepy import OAuthHandler
from tweepy import API
from tweepy import Cursor
from datetime import datetime, date, time, timedelta
from collections import Counter
import sys
from textblob import TextBlob

# prints user's tweets and its most mentioned users + hashtags

consumer_key= ''
consumer_secret= ''
access_token=''
access_token_secret=''

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
auth_api = API(auth)

#Accounts we want tweets from
account_list = ['dog_rates']

#Get details about acc
for target in account_list:
    print("Getting data for " + target)
    item = auth_api.get_user(target)
    print("name: " + item.name)
    print("screen_name: " + item.screen_name)
    print("description: " + item.description)
    print("statuses_count: " + str(item.statuses_count))
    print("friends_count: " + str(item.friends_count))
    print("followers_count: " + str(item.followers_count))

#User's tweets from up to 30 days ago
hashtags = []
mentions = []
tweet_count = 0
end_date = datetime.utcnow() - timedelta(days=30)
for status in Cursor(auth_api.user_timeline, id=target).items():
  tweet_count += 1
  print (status.text) #this only prints 1 tweet? :(
  if hasattr(status, "entities"):
    entities = status.entities
    if "hashtags" in entities:
      for ent in entities["hashtags"]:
        if ent is not None:
          if "text" in ent:
            hashtag = ent["text"]
            if hashtag is not None:
              hashtags.append(hashtag)
    if "user_mentions" in entities:
      for ent in entities["user_mentions"]:
        if ent is not None:
          if "screen_name" in ent:
            name = ent["screen_name"]
            if name is not None:
              mentions.append(name)
  if status.created_at < end_date:
    break


#List most mentioned users and most used hashtags
# print
# print("Most mentioned Twitter users:")
# for item, count in Counter(mentions).most_common(10):
#   print(item + "\t" + str(count))

# print
# print("Most used hashtags:")
# for item, count in Counter(hashtags).most_common(10):
#   print(item + "\t" + str(count))

# print
# print ("All done. Processed " + str(tweet_count) + " tweets.")
# print